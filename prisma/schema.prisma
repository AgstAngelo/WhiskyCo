generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Char(36)
  email     String   @unique @db.VarChar(100)
  name      String   @db.VarChar(100)
  password  String   @db.VarChar(255)
  cpf       String   @unique @db.VarChar(11)
  phone     String   @unique @db.VarChar(11)
  isAdmin   Boolean  @db.Bit(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Refresh {
  id        String @id @default(uuid()) @db.Char(36)
  jwt_id    String @default(uuid()) @db.Char(36)
  user_id   String @unique
  exp       Int    @db.UnsignedInt
  @@map("refresh")
}

model Product {
  id          String   @id @default(uuid()) @db.Char(36)
  name        String   @unique @db.VarChar(100)
  pictures    Json?
  price       Float    @db.Float
  description String?  @db.Text
  category_id String   @db.Char(36)
  brand_id    String   @db.Char(36)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([brand_id], map: "products_brand_id_fkey")
  @@index([category_id], map: "products_category_id_fkey")
  @@map("products")
}

model Order {
  id        String   @id @default(uuid()) @db.Char(36)
  amount    Float    @db.Float
  payment   Payment  @default(DEBITO)
  dividedIn Int?     @db.TinyInt
  createdAt DateTime @default(now())
  status    Status   @default(ANALISE)
  updatedAt DateTime @updatedAt
  user_id   String   @db.Char(36)

  @@index([user_id], map: "orders_user_id_fkey")
  @@map("orders")
}

model Order_item {
  id         String @id @default(uuid()) @db.Char(36)
  quantity   Int    @db.SmallInt
  order_id   String @db.Char(36)
  product_id String @db.Char(36)

  @@index([order_id], map: "order_items_order_id_fkey")
  @@index([product_id], map: "order_items_product_id_fkey")
  @@map("order_items")
}

model Category {
  id          String  @id @default(uuid()) @db.Char(36)
  name        String  @unique @db.VarChar(50)
  description String? @db.Text

  @@map("categories")
}

model Brand {
  id          String  @id @default(uuid()) @db.Char(36)
  name        String  @unique @db.VarChar(50)
  description String? @db.Text

  @@map("brands")
}

model Address {
  id           String  @id @default(uuid()) @db.Char(36)
  CEP          String  @db.VarChar(7)
  Street       String  @db.VarChar(100)
  number       String  @db.VarChar(10)
  complement   String? @db.VarChar(100)
  main_address Boolean @db.Bit(1)
  user_id      String  @db.Char(36)

  @@index([user_id], map: "addresses_user_id_fkey")
  @@map("addresses")
}

enum Status {
  ANALISE
  ENVIADO
  ENTREGUE
  CANCELADO
}

enum Payment {
  DEBITO
  CREDITO
  PIX
  BOLETO
}
